# LinkedList
class Node {
int i;
Node next;
}

class Linked {

// print 
public void printList(Node node) {
if(node == null )
{
return;
}
System.out.println(node.i+ " ");
printList(node.next);
}



//GetNewNode
private Node getNewNode(int i) {
Node a = new Node();
a.i = i;
a.next = null;
return a;
}



// Insert
public Node insert(int i , Node node) {
if(node == null) {
return getNewNode(i);
}
else {
node.next = insert(i,node.next);

}
return node;
}


  //Delete elm at givan position

public Node deletePosition(int position , Node node){
if(position < 0) {
System.out.println("Not a valid position ");
return node;
}
if(node == null && position > 1){
System.out.println("Not valid ");
return node;
}
if(position == 1){
return node.next;
}

node.next =  deletePosition(position-1 , node.next);
}


//main 
public static void main(String[] args){
Node root = null;
Linked a = new Linked();
root = a.deletePosition(2,root);
root = a.insert(12 , root);
root = a.insert(99 , root);
root = a.insert(37 , root);
root = a.deletePosition(2,root);
a.printList(root);
System.out.println();

}
}
